<Window x:Class="PikoPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:controls="clr-namespace:PikoPlayer.Controls"
        Topmost="True"
        Background="{Binding ActiveTheme.BackgroundColor, Mode=TwoWay}"
        WindowStyle="None"
        AllowsTransparency="True"
        Title="PikoPlayer" 
        Height="{Binding Dimensions.WindowHeight, Mode=TwoWay}" 
        Width="{Binding Dimensions.WindowWidth, Mode=TwoWay}" 
        Top="{Binding Position.X, Mode=TwoWay}" Left="{Binding Position.Y, Mode=TwoWay}">
    <Window.Resources>
        <ContextMenu x:Key="MainContextMenu">
            <MenuItem Header="Reset Position" Command="{Binding ResetPositionCommand}" />
            <MenuItem Header="Scale">
                <MenuItem>
                    <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="MenuItem">
                                        <Grid Height="24" Background="#FBFBFD" MinWidth="128" MinHeight="48" Margin="2">
                                            <Grid.RowDefinitions>
                                            <RowDefinition Height="*"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                        </Grid.RowDefinitions>
                                            <Slider Grid.Row="0" Minimum="1" Maximum="3" Value="{Binding Dimensions.Scale}" />
                                            <TextBlock Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                       Text="{Binding Dimensions.Scale, StringFormat=Scale: {0}}" />
                                        </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                        </MenuItem.Style>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Themes" ItemsSource="{Binding ThemesList}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Header" Value="{Binding Name}" />
                        <Setter Property="Command" Value="{Binding ChangeThemeCommand}" />
                        <Setter Property="IsChecked" Value="{Binding Checked}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="Close" Command="{Binding CloseCommand}" />
        </ContextMenu>

        <Style TargetType="Button" x:Key="PlaybackButton">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border HorizontalAlignment="Center" VerticalAlignment="Center" 
                                Width="{Binding Dimensions.ButtonWidth}" Height="{Binding Dimensions.ButtonHeight}">
                            <ContentPresenter x:Name="MyContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MyContentPresenter" Property="Opacity" Value="0.8" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="MyContentPresenter" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="MyContentPresenter" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <StackPanel Orientation="Horizontal" Margin="{Binding Dimensions.WindowMargin}">
        <tb:TaskbarIcon x:Name="NotificationIcon" Visibility="Visible"
                        IconSource="../Resources/Icons/taskbar.ico" ToolTipText="Pikoplayer"
                        ContextMenu="{StaticResource MainContextMenu}" />

        <TextBlock Text="=" Foreground="{Binding ActiveTheme.ForegroundColor}" FontSize="{Binding Dimensions.HamburgerSize}"
                   Width="{Binding Dimensions.ButtonWidth}" Height="{Binding Dimensions.ButtonHeight}"
                     HorizontalAlignment="Center" VerticalAlignment="Center" ContextMenu="{StaticResource MainContextMenu}" />

        <Button Command="{Binding ControlPlaybackCommand}" CommandParameter="{x:Static controls:ControlAction.Prev}"
                Style="{StaticResource PlaybackButton}">
            <Image Source="{Binding ActiveTheme.Prev}" />
        </Button>
        <Button Command="{Binding ControlPlaybackCommand}" CommandParameter="{x:Static controls:ControlAction.Play}"
                Style="{StaticResource PlaybackButton}" Margin="{Binding Dimensions.CentralButtonMargin}">
            <Image Source="{Binding ActiveTheme.Play}" />
        </Button>
        <Button Command="{Binding ControlPlaybackCommand}" CommandParameter="{x:Static controls:ControlAction.Next}"
                Style="{StaticResource PlaybackButton}">
            <Image Source="{Binding ActiveTheme.Next}" />
        </Button>
    </StackPanel>
</Window>